{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/danielkrajnak/Documents/Code/dansdrinkmenu/src/pages/index.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport ScrollTransitions from \"react-scroll-transitions\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nvar IndexPage = function IndexPage(_ref) {\n  var data = _ref.data;\n  return data && __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(SEO, {\n    title: \"Menu\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }), __jsx(ScrollTransitions, {\n    sections: [{\n      id: \"start\",\n      inTransition: \"easeIn\",\n      outTransition: \"easeOut\",\n      height: 1\n    }].concat(_toConsumableArray(data.allSanityDrink.nodes.slice(0, data.allSanityDrink.nodes.length - 1).map(function (drink) {\n      return {\n        id: drink.id,\n        inTransition: \"easeIn\",\n        outTransition: \"easeOut\",\n        height: 1.5\n      };\n    })), _toConsumableArray(data.allSanityDrink.nodes.slice(data.allSanityDrink.nodes.length - 1).map(function (drink) {\n      return {\n        id: drink.id,\n        inTransition: \"easeIn\"\n      };\n    }))),\n    render: function render(id, transitionData) {\n      var drink = data.allSanityDrink.nodes.find(function (drink) {\n        return drink.id === id;\n      });\n      var percent = transitionData.transitionPercent;\n\n      if (id === \"start\") {\n        percent = transitionData.leavingPercent;\n      } else if (data.allSanityDrink.nodes.findIndex(function (drink) {\n        return drink.id === id;\n      }) === data.allSanityDrink.nodes.length - 1) {\n        percent = transitionData.enteringPercent;\n      }\n\n      return __jsx(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: \"100%\",\n          color: \"white\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"card\",\n        style: {\n          width: \"70%\",\n          opacity: percent\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, id === \"start\" ? __jsx(\"h1\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 19\n        }\n      }, \"Menu\") : drink && __jsx(React.Fragment, null, __jsx(\"h1\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 23\n        }\n      }, drink.name), __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 23\n        }\n      }, drink.description))));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c = IndexPage;\nexport default IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["/Users/danielkrajnak/Documents/Code/dansdrinkmenu/src/pages/index.tsx"],"names":["React","ScrollTransitions","Layout","SEO","IndexPage","data","id","inTransition","outTransition","height","allSanityDrink","nodes","slice","length","map","drink","transitionData","find","percent","transitionPercent","leavingPercent","findIndex","enteringPercent","display","alignItems","justifyContent","color","width","opacity","name","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ScrollTransitions from \"react-scroll-transitions\";\nimport { DrinksQuery } from \"../../graphql-types\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst IndexPage: React.FunctionComponent<{ data: DrinksQuery }> = ({ data }) =>\n  data && (\n    <Layout>\n      <SEO title=\"Menu\" />\n      <ScrollTransitions\n        sections={[\n          {\n            id: \"start\",\n            inTransition: \"easeIn\",\n            outTransition: \"easeOut\",\n            height: 1,\n          },\n          ...data.allSanityDrink.nodes\n            .slice(0, data.allSanityDrink.nodes.length - 1)\n            .map((drink) => ({\n              id: drink.id,\n              inTransition: \"easeIn\" as const,\n              outTransition: \"easeOut\" as const,\n              height: 1.5,\n            })),\n          ...data.allSanityDrink.nodes\n            .slice(data.allSanityDrink.nodes.length - 1)\n            .map((drink) => ({\n              id: drink.id,\n              inTransition: \"easeIn\" as const,\n            })),\n        ]}\n        render={(id, transitionData) => {\n          const drink = data.allSanityDrink.nodes.find(\n            (drink) => drink.id === id\n          );\n\n          let percent = transitionData.transitionPercent;\n          if (id === \"start\") {\n            percent = transitionData.leavingPercent;\n          } else if (\n            data.allSanityDrink.nodes.findIndex((drink) => drink.id === id) ===\n            data.allSanityDrink.nodes.length - 1\n          ) {\n            percent = transitionData.enteringPercent;\n          }\n\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                height: \"100%\",\n                color: \"white\",\n              }}\n            >\n              <div\n                className=\"card\"\n                style={{\n                  width: \"70%\",\n                  opacity: percent,\n                }}\n              >\n                {id === \"start\" ? (\n                  <h1>Menu</h1>\n                ) : (\n                  drink && (\n                    <>\n                      <h1>{drink.name}</h1>\n                      <div>{drink.description}</div>\n                    </>\n                  )\n                )}\n              </div>\n            </div>\n          );\n        }}\n      />\n    </Layout>\n  );\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}
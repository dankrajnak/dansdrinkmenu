{"ast":null,"code":"var _jsxFileName = \"/Users/danielkrajnak/Documents/Code/dansdrinkmenu/src/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport ScrollTransitions from \"react-scroll-transitions\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst IndexPage = ({\n  data\n}) => data && __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}, __jsx(SEO, {\n  title: \"Menu\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }\n}), __jsx(ScrollTransitions, {\n  sections: [{\n    id: \"start\",\n    inTransition: \"easeIn\",\n    outTransition: \"easeOut\",\n    height: 1\n  }, ...data.allSanityDrink.nodes.slice(0, data.allSanityDrink.nodes.length - 1).map(drink => ({\n    id: drink.id,\n    inTransition: \"easeIn\",\n    outTransition: \"easeOut\",\n    height: 1.5\n  })), ...data.allSanityDrink.nodes.slice(data.allSanityDrink.nodes.length - 1).map(drink => ({\n    id: drink.id,\n    inTransition: \"easeIn\"\n  }))],\n  render: (id, transitionData) => {\n    const drink = data.allSanityDrink.nodes.find(drink => drink.id === id);\n    let percent = transitionData.transitionPercent;\n\n    if (id === \"start\") {\n      percent = transitionData.leavingPercent;\n    } else if (data.allSanityDrink.nodes.findIndex(drink => drink.id === id) === data.allSanityDrink.nodes.length - 1) {\n      percent = transitionData.enteringPercent;\n    }\n\n    return __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"card\",\n      style: {\n        width: \"70%\",\n        opacity: percent\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, id === \"start\" ? __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, \"Menu\") : drink && __jsx(React.Fragment, null, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }\n    }, drink.name), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }\n    }, drink.description))));\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }\n}));\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/danielkrajnak/Documents/Code/dansdrinkmenu/src/pages/index.tsx"],"names":["React","ScrollTransitions","Layout","SEO","IndexPage","data","id","inTransition","outTransition","height","allSanityDrink","nodes","slice","length","map","drink","transitionData","find","percent","transitionPercent","leavingPercent","findIndex","enteringPercent","display","alignItems","justifyContent","color","width","opacity","name","description"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AAGA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,MAAMC,SAAyD,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAChEA,IAAI,IACF,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,GAAD;AAAK,EAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,MAAC,iBAAD;AACE,EAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,EAAE,EAAE,OADN;AAEEC,IAAAA,YAAY,EAAE,QAFhB;AAGEC,IAAAA,aAAa,EAAE,SAHjB;AAIEC,IAAAA,MAAM,EAAE;AAJV,GADQ,EAOR,GAAGJ,IAAI,CAACK,cAAL,CAAoBC,KAApB,CACAC,KADA,CACM,CADN,EACSP,IAAI,CAACK,cAAL,CAAoBC,KAApB,CAA0BE,MAA1B,GAAmC,CAD5C,EAEAC,GAFA,CAEKC,KAAD,KAAY;AACfT,IAAAA,EAAE,EAAES,KAAK,CAACT,EADK;AAEfC,IAAAA,YAAY,EAAE,QAFC;AAGfC,IAAAA,aAAa,EAAE,SAHA;AAIfC,IAAAA,MAAM,EAAE;AAJO,GAAZ,CAFJ,CAPK,EAeR,GAAGJ,IAAI,CAACK,cAAL,CAAoBC,KAApB,CACAC,KADA,CACMP,IAAI,CAACK,cAAL,CAAoBC,KAApB,CAA0BE,MAA1B,GAAmC,CADzC,EAEAC,GAFA,CAEKC,KAAD,KAAY;AACfT,IAAAA,EAAE,EAAES,KAAK,CAACT,EADK;AAEfC,IAAAA,YAAY,EAAE;AAFC,GAAZ,CAFJ,CAfK,CADZ;AAuBE,EAAA,MAAM,EAAE,CAACD,EAAD,EAAKU,cAAL,KAAwB;AAC9B,UAAMD,KAAK,GAAGV,IAAI,CAACK,cAAL,CAAoBC,KAApB,CAA0BM,IAA1B,CACXF,KAAD,IAAWA,KAAK,CAACT,EAAN,KAAaA,EADZ,CAAd;AAIA,QAAIY,OAAO,GAAGF,cAAc,CAACG,iBAA7B;;AACA,QAAIb,EAAE,KAAK,OAAX,EAAoB;AAClBY,MAAAA,OAAO,GAAGF,cAAc,CAACI,cAAzB;AACD,KAFD,MAEO,IACLf,IAAI,CAACK,cAAL,CAAoBC,KAApB,CAA0BU,SAA1B,CAAqCN,KAAD,IAAWA,KAAK,CAACT,EAAN,KAAaA,EAA5D,MACAD,IAAI,CAACK,cAAL,CAAoBC,KAApB,CAA0BE,MAA1B,GAAmC,CAF9B,EAGL;AACAK,MAAAA,OAAO,GAAGF,cAAc,CAACM,eAAzB;AACD;;AAED,WACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,UAAU,EAAE,QAFP;AAGLC,QAAAA,cAAc,EAAE,QAHX;AAILhB,QAAAA,MAAM,EAAE,MAJH;AAKLiB,QAAAA,KAAK,EAAE;AALF,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,KADF;AAELC,QAAAA,OAAO,EAAEV;AAFJ,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGZ,EAAE,KAAK,OAAP,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAGCS,KAAK,IACH,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,CAACc,IAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMd,KAAK,CAACe,WAAZ,CAFF,CAXN,CATF,CADF;AA8BD,GApEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CAFJ;;AA6EA,eAAe1B,SAAf","sourcesContent":["import React from \"react\";\nimport ScrollTransitions from \"react-scroll-transitions\";\nimport { DrinksQuery } from \"../../graphql-types\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst IndexPage: React.FunctionComponent<{ data: DrinksQuery }> = ({ data }) =>\n  data && (\n    <Layout>\n      <SEO title=\"Menu\" />\n      <ScrollTransitions\n        sections={[\n          {\n            id: \"start\",\n            inTransition: \"easeIn\",\n            outTransition: \"easeOut\",\n            height: 1,\n          },\n          ...data.allSanityDrink.nodes\n            .slice(0, data.allSanityDrink.nodes.length - 1)\n            .map((drink) => ({\n              id: drink.id,\n              inTransition: \"easeIn\" as const,\n              outTransition: \"easeOut\" as const,\n              height: 1.5,\n            })),\n          ...data.allSanityDrink.nodes\n            .slice(data.allSanityDrink.nodes.length - 1)\n            .map((drink) => ({\n              id: drink.id,\n              inTransition: \"easeIn\" as const,\n            })),\n        ]}\n        render={(id, transitionData) => {\n          const drink = data.allSanityDrink.nodes.find(\n            (drink) => drink.id === id\n          );\n\n          let percent = transitionData.transitionPercent;\n          if (id === \"start\") {\n            percent = transitionData.leavingPercent;\n          } else if (\n            data.allSanityDrink.nodes.findIndex((drink) => drink.id === id) ===\n            data.allSanityDrink.nodes.length - 1\n          ) {\n            percent = transitionData.enteringPercent;\n          }\n\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                height: \"100%\",\n                color: \"white\",\n              }}\n            >\n              <div\n                className=\"card\"\n                style={{\n                  width: \"70%\",\n                  opacity: percent,\n                }}\n              >\n                {id === \"start\" ? (\n                  <h1>Menu</h1>\n                ) : (\n                  drink && (\n                    <>\n                      <h1>{drink.name}</h1>\n                      <div>{drink.description}</div>\n                    </>\n                  )\n                )}\n              </div>\n            </div>\n          );\n        }}\n      />\n    </Layout>\n  );\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}